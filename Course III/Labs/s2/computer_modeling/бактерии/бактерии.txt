собственно, как я это вижу
начинаем мы все с пространства, которое мы задаем с помощью dimension - размерности пространства и функции fitnessFunction(vector v), которая по точке в пространстве, которая задается вектором, возвращает число. фитнес-функцию будем максимизировать
теперь наша колония, которую задаем с помощью:
colonySize - четный размер колонии
colony[[]] - массив размерности colonySize массивов размерности dimension - координаты наших бактерий
velocity[[]] - массив размерности colonySize массивов размерности dimension - направление по каждой координате наших бактерий
healthStatus[] - массив размерности colonySize - состояние здоровья каждой бактерии
и также задаем константы всякие:
numberOfChemotsxisSteps
numberOfReproductionSteps
numberOfDispersionSteps
probOfDispersion - вероятность рассеивания
теперь о том, как я вижу всякие функции
для нашей колонии нужна функция generateNewBacterium(int n) - создаем n-ю бактерию в случайном месте нашего пространства. Она будет использоваться вначале, при репродукции и рассеивании
и функция, которую мы используем лишь раз в самом начале - generateColony()
теперь сам main. я хочу, чтобы в нем вызывалась одна функция startAlgo(). Она же в свою очередь будет циклом, который реализовывает рассеивание, в каждом из которых будет цикл для репродукции и в нем цикл для хемотаксиса. о каждом поподробнее
chemotaxisForAll() - это один шаг хемотаксиса для всех бактерий.
chemotaxis(int n) - один шаг хемотаксиса для n-й бактерии. Для него нам нужны две функции
swim(int n), которая реализует шаг плавания для бактерии, то есть меняет координаты и tumble(int n), которая меняет вектор направлений для бактерии. При новом шаге репродукции все бактерии начинают с кувырка. Также нам нужен шаг хемотаксиса. Я предлагаю для этого использовать функцию chemotaxisStep(int t), которая по времени будет генерировать шаг. Будем использовать уменьшающийся со временем шаг например, по формуле ln(1+1/t).
Также для красоты кода давайте использовать функции norma(vector v), которая по вектору будет возвращать его норму как корень из суммы квадратов и normalized(vector v), которая нормирует вектор. Также в хемотаксисе надо изменять healthStatus.
Репродукция: тут все понятно. Сортируем по убыванию healthStatus наши бактерии. Половину лучших дублируем. При достижении нужного количества репродукций переходим во внешний цикл - рассеивание.
С вероятностью probOfDispersion мы отбираем сколько-то бактерий и применяем для них generateNewBacterium(int n).
При достижении нужного числа рассеиваний мы сортируем наши бактерии по значению фитнес функции и берем лучшую - это и будет наш оптимум 